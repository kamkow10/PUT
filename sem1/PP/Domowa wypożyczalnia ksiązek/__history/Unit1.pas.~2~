unit Unit1;

interface

uses
  System.SysUtils, System.Types, System.DateUtils, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, ;

type
  TForm1 = class(TForm)
  private
    { Private declarations }
  public
    { Public declarations }
  end;

type
  wskaznik = ^element;
  element = record
    autor     : string;
    tytul     : string;
    wypo      : string;
    data_wypo : TDateTime;
    next      : wskaznik;
  end;

var
  Form1: TForm1;

implementation

{$R *.fmx}

{Procedura dodawania elementu do lisy}
procedure dodaj (var head : wskaznik; x : string; y : string;
                  z : string; t : TDateTime);
var
  p,e : wskaznik;
begin
  new(e);
  e^.next := nil;
  e^.autor := x;
  e^.tytul := y;
  e^.wypo := z;
  e^.data_wypo := t;
  p := head;
  if p = nil then
    head := e
  else
  begin
    while p^.next <> nil do
      p := p^.next;
    p^.next := e;
  end;
end;

{Procedura usuwania elementu z  listy}
procedure usun(var head : wskaznik; e : wskaznik);
var
  p : wskaznik;
begin
  if head = e then
  begin
    p := head;
    head := p^.next;
    dispose(p);
  end
  else
  begin
    p := head;
    while p^.next <> e do p := p^.next;
    p^.next := e^.next;
    dispose(e);
  end;
end;

{Funkcja wyszukuj¹ca dany element}
function wyszukaj(var head : wskaznik; x : string; y : string;
                  z : string; t : TDateTime) : wskaznik;
var
  p : wskaznik;
begin
  p := head;
  if p <> nil then
   begin
     while
          (p^.data <> i) OR
          (p^.autor <> x) OR
          (p^.tytul <> y) OR
          (p^.wypo <> z) OR
          (p^.data_wypo <> t)
                              do   p := p^.next;
     Result := p;
   end
  else
   ShowMessage('Brak elementów na liscie.');
end;

{Procedura modyfikuj¹ca element listy}
procedure zmien(x : string; y : string; z : string; t : TDateTime;
                 e : wskaznik);
begin
  e^.data := x;
end;

end.


